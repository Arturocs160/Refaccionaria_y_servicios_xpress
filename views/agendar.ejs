<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/resources/css/global.css">
    <link rel="stylesheet" href="/resources/css/cita.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/pikaday/css/pikaday.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <title>Agendar cita</title>
</head>
<body style="overflow-x: hidden;">
    <header>
        <a href="/"><img src="/resources/assets/logo.png" alt="logo Refaccionaría y servicios Xpress"></a>
        <input type="checkbox" id="check">
        <label for="check" class="mostrar-menu">
            &#8801
        </label> 
         <nav class="menu">
            <a href="/">Inicio</a>
            <a href="/servicios">Servicios</a>
            <a href="/cita">Cita</a>   
            <a href="/productos">Productos</a>
            <a href="/nosotros">Nosotros</a>
            <a href="/contacto">Contacto</a>
        <label for="check" class="esconder-menu">
            &#215
        </label>
    </nav>
    </header>
    <div class="nombresec">
        <h1>Agendar cita</h1>
    </div>
    <form id="formularioCitas" action="/agendarCita" method="post">
    <div class="container">
        <div class="campos-agendar">
            <div class="agendar-datos">
                <h4>Nombre</h4>
                <h4>Apellido Paterno</h4>
                <h4>Apellido Materno</h4>
            </div>
            <div class="capturar-datos">
                <input name="nombre_Cliente" id="nombre_Cliente" type="text" pattern="[A-Za-z\s]+" required oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '');">
                <input name="apellido1" type="text" id="apellido1" pattern="[A-Za-z\s]+" required oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '');">
                <input name="apellido2" type="text" id="apellido2" pattern="[A-Za-z\s]+" oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '');">
            </div>
        </div>
        </div>
            <div class="campos-agendar">
                <div class="agendar-datos">
                    <h4>Correo electronico</h4>
                    <h4>Telefono</h4>
                </div>
                <div class="capturar-datos">
                   <input name="correo" id="correo" type="email" required> 
                   <input name="telefono" id="telefono" type="text" pattern="\d{10}" maxlength="10" required oninput="this.value = this.value.replace(/[^0-9]/g, '');" oninvalid="this.setCustomValidity('Por favor, ingresa un numero de telefono de 10 digitos')"  oninput="this.setCustomValidity('')">


                </div>
                </div>

       
        <div class="campos-agendar">
            <div class="agendar-datos">
                <h4>Servicio</h4>
                <h4>Fecha</h4>
                <h4>Hora</h4>
            </div>
            <div class="capturar-datos">
            <select  name="id_Servicio" id="servicios-lista" required oninvalid="this.setCustomValidity('Por favor, selecciona un servicio')"  oninput="this.setCustomValidity('')">
                <option value="" disabled selected>SELECCIONE UN SERVICIO</option>
                </select>
                
               <input placeholder="SELECCIONE UNA FECHA" autocomplete="off" name="fecha" type="text" id="fechas" required oninvalid="this.setCustomValidity('Por favor, selecciona un fecha')"  oninput="this.setCustomValidity('')">
               <script src="https://cdn.jsdelivr.net/npm/pikaday/pikaday.js"></script>
        
               <select  name="hora" id="horas" required oninvalid="this.setCustomValidity('Por favor, selecciona una hora')"  oninput="this.setCustomValidity('')">
                <option value="" disabled selected>SELECCIONE UNA HORA</option>
               </select>
            </div>
    </div>
    <div class="boton">
        <button type="submit" id="rojo"><a>Agendar</a></button>
    </div>
</form>



</body>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        inicializarPikaday();
    });

    function inicializarPikaday() {
        var picker = new Pikaday({
            field: document.getElementById('fechas'),
            format: 'YYYY-MM-DD',
            minDate: new Date(), // Establece la fecha mínima como la fecha actual
            toString(date, format) {
                const day = date.getDate();
                const month = date.getMonth() + 1;
                const year = date.getFullYear();
                return `${year}/${month}/${day}`;
            },
            disableDayFn: function(date) {
                // Deshabilita todos los domingos
                return date.getDay() === 0;
            },
            onSelect: function(date) {
                const formattedDate = date.toISOString().split('T')[0];
                fetch(`/api/citas/${formattedDate}`)
                    .then(response => response.json())
                    .then(reservedTimes => {
                        actualizarHoras(reservedTimes, date);
                    });
            }
        });
    }

    function actualizarHoras(reservedTimes, selectedDate) {
        const timepicker = document.getElementById('horas');
        timepicker.innerHTML = ''; // Limpiar las opciones anteriores

        const horasDisponibles = [
            '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',
            '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00'
        ];
//Se agrega "Deshabilitar horas disponibles segun la hora actual"
        const ahora = new Date();
        const esHoy = selectedDate.toDateString() === ahora.toDateString();
        const horaActual = obtenerHoraActual();

        horasDisponibles.forEach(time => {
            const option = document.createElement('option');
            option.value = time;
            option.text = time;
            if (reservedTimes.includes(time) || (esHoy && time < horaActual)) {
                option.disabled = true;
            }
            timepicker.add(option);
        });
    }

    function obtenerHoraActual() {
        const ahora = new Date();
        const horas = ahora.getHours().toString().padStart(2, '0');
        const minutos = ahora.getMinutes().toString().padStart(2, '0');
        return `${horas}:${minutos}`;
    }

    fetch('/api/servicios')
        .then(response => response.json())
        .then(servicios => {
            const serviciosLista = document.getElementById('servicios-lista');
            servicios.forEach(servicio => {
                const serviciosOpcion = document.createElement('option');
                serviciosOpcion.value = servicio.id_Servicio;
                serviciosOpcion.textContent = servicio.nombre_Servicio;
                serviciosLista.appendChild(serviciosOpcion);
            });
        })
        .catch(error => console.error('Error fetching productos:', error));

    document.getElementById('formularioCitas').addEventListener('submit', function(event) {
        event.preventDefault(); // Evitar el envío del formulario por defecto

        const data = {
            nombre_Cliente: document.getElementById('nombre_Cliente').value,
            apellido1: document.getElementById('apellido1').value,
            apellido2: document.getElementById('apellido2').value,
            correo: document.getElementById('correo').value,
            telefono: document.getElementById('telefono').value,
            id_Servicio: document.getElementById('servicios-lista').value,
            fecha: document.getElementById('fechas').value,
            hora: document.getElementById('horas').value
        };

        fetch('/agendarCita', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
        })
        .then(response => {
            if (response.ok) {
                // Crear un blob a partir de la respuesta
                return response.blob();
            } else {
                throw new Error('Hubo un problema al agendar la cita.');
            }
        })
        .then(blob => {
            // Mostrar alerta de éxito
            Swal.fire({
                title: 'Registro Exitoso',
                text: 'Tu cita ha sido agendada correctamente.',
                icon: 'success',
                confirmButtonText: 'Descargar PDF'
            }).then(() => {
                // Crear un enlace para descargar el PDF
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'cita.pdf'; // Nombre del archivo
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url); // Limpiar el objeto URL

                // Redireccionar a la página de citas
                window.location.href = "/cita";
            });
        })
        .catch(error => {
            Swal.fire({
                title: 'Error',
                text: "Ocurrio un error al agendar su cita, intente de nuevo",
                icon: 'error',
                confirmButtonText: 'OK'
            });
            console.error('Error:', error);
        });
    });
</script>
</html>
